{"ast":null,"code":"import { isClient } from '@vueuse/core';\nlet isDragging = false;\nfunction draggable(element, options) {\n  if (!isClient) return;\n  const moveFn = function (event) {\n    var _a;\n    (_a = options.drag) == null ? void 0 : _a.call(options, event);\n  };\n  const upFn = function (event) {\n    var _a;\n    document.removeEventListener(\"mousemove\", moveFn);\n    document.removeEventListener(\"mouseup\", upFn);\n    document.removeEventListener(\"touchmove\", moveFn);\n    document.removeEventListener(\"touchend\", upFn);\n    document.onselectstart = null;\n    document.ondragstart = null;\n    isDragging = false;\n    (_a = options.end) == null ? void 0 : _a.call(options, event);\n  };\n  const downFn = function (event) {\n    var _a;\n    if (isDragging) return;\n    event.preventDefault();\n    document.onselectstart = () => false;\n    document.ondragstart = () => false;\n    document.addEventListener(\"mousemove\", moveFn);\n    document.addEventListener(\"mouseup\", upFn);\n    document.addEventListener(\"touchmove\", moveFn);\n    document.addEventListener(\"touchend\", upFn);\n    isDragging = true;\n    (_a = options.start) == null ? void 0 : _a.call(options, event);\n  };\n  element.addEventListener(\"mousedown\", downFn);\n  element.addEventListener(\"touchstart\", downFn);\n}\nexport { draggable as default };","map":{"version":3,"mappings":";AACA,IAAIA,UAAU,GAAG,KAAK;AACP,kBAAQ,CAACC,OAAO,EAAEC,OAAO,EAAE;EACxC,IAAI,CAACC,QAAQ,EACX;EACF,MAAMC,MAAM,GAAG,UAASC,KAAK,EAAE;IAC7B,IAAIC,EAAE;IACN,CAACA,EAAE,GAAGJ,OAAO,CAACK,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,EAAE,CAACE,IAAI,CAACN,OAAO,EAAEG,KAAK,CAAC;EAClE,CAAG;EACD,MAAMI,IAAI,GAAG,UAASJ,KAAK,EAAE;IAC3B,IAAIC,EAAE;IACNI,QAAQ,CAACC,mBAAmB,CAAC,WAAW,EAAEP,MAAM,CAAC;IACjDM,QAAQ,CAACC,mBAAmB,CAAC,SAAS,EAAEF,IAAI,CAAC;IAC7CC,QAAQ,CAACC,mBAAmB,CAAC,WAAW,EAAEP,MAAM,CAAC;IACjDM,QAAQ,CAACC,mBAAmB,CAAC,UAAU,EAAEF,IAAI,CAAC;IAC9CC,QAAQ,CAACE,aAAa,GAAG,IAAI;IAC7BF,QAAQ,CAACG,WAAW,GAAG,IAAI;IAC3Bb,UAAU,GAAG,KAAK;IAClB,CAACM,EAAE,GAAGJ,OAAO,CAACY,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGR,EAAE,CAACE,IAAI,CAACN,OAAO,EAAEG,KAAK,CAAC;EACjE,CAAG;EACD,MAAMU,MAAM,GAAG,UAASV,KAAK,EAAE;IAC7B,IAAIC,EAAE;IACN,IAAIN,UAAU,EACZ;IACFK,KAAK,CAACW,cAAc,EAAE;IACtBN,QAAQ,CAACE,aAAa,GAAG,MAAM,KAAK;IACpCF,QAAQ,CAACG,WAAW,GAAG,MAAM,KAAK;IAClCH,QAAQ,CAACO,gBAAgB,CAAC,WAAW,EAAEb,MAAM,CAAC;IAC9CM,QAAQ,CAACO,gBAAgB,CAAC,SAAS,EAAER,IAAI,CAAC;IAC1CC,QAAQ,CAACO,gBAAgB,CAAC,WAAW,EAAEb,MAAM,CAAC;IAC9CM,QAAQ,CAACO,gBAAgB,CAAC,UAAU,EAAER,IAAI,CAAC;IAC3CT,UAAU,GAAG,IAAI;IACjB,CAACM,EAAE,GAAGJ,OAAO,CAACgB,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGZ,EAAE,CAACE,IAAI,CAACN,OAAO,EAAEG,KAAK,CAAC;EACnE,CAAG;EACDJ,OAAO,CAACgB,gBAAgB,CAAC,WAAW,EAAEF,MAAM,CAAC;EAC7Cd,OAAO,CAACgB,gBAAgB,CAAC,YAAY,EAAEF,MAAM,CAAC;AAChD","names":["isDragging","element","options","isClient","moveFn","event","_a","drag","call","upFn","document","removeEventListener","onselectstart","ondragstart","end","downFn","preventDefault","addEventListener","start"],"sources":["../../../../../../packages/components/color-picker/src/draggable.ts"],"sourcesContent":["import { isClient } from '@vueuse/core'\n\nlet isDragging = false\n\nexport declare interface IOptions {\n  drag?: (event: Event) => void\n  start?: (event: Event) => void\n  end?: (event: Event) => void\n}\n\nexport default function (element: HTMLElement, options: IOptions) {\n  if (!isClient) return\n\n  const moveFn = function (event: Event) {\n    options.drag?.(event)\n  }\n\n  const upFn = function (event: Event) {\n    document.removeEventListener('mousemove', moveFn)\n    document.removeEventListener('mouseup', upFn)\n    document.removeEventListener('touchmove', moveFn)\n    document.removeEventListener('touchend', upFn)\n    document.onselectstart = null\n    document.ondragstart = null\n\n    isDragging = false\n\n    options.end?.(event)\n  }\n\n  const downFn = function (event: Event) {\n    if (isDragging) return\n    event.preventDefault()\n    document.onselectstart = () => false\n    document.ondragstart = () => false\n    document.addEventListener('mousemove', moveFn)\n    document.addEventListener('mouseup', upFn)\n    document.addEventListener('touchmove', moveFn)\n    document.addEventListener('touchend', upFn)\n\n    isDragging = true\n\n    options.start?.(event)\n  }\n\n  element.addEventListener('mousedown', downFn)\n  element.addEventListener('touchstart', downFn)\n}\n"]},"metadata":{},"sourceType":"module"}