{"ast":null,"code":"const REPEAT_INTERVAL = 100;\nconst REPEAT_DELAY = 600;\nconst RepeatClick = {\n  beforeMount(el, binding) {\n    let interval = null;\n    let delay = null;\n    const handler = () => binding.value && binding.value();\n    const clear = () => {\n      if (delay) {\n        clearTimeout(delay);\n        delay = null;\n      }\n      if (interval) {\n        clearInterval(interval);\n        interval = null;\n      }\n    };\n    el.addEventListener(\"mousedown\", e => {\n      if (e.button !== 0) return;\n      handler();\n      document.addEventListener(\"mouseup\", clear, {\n        once: true\n      });\n      clear();\n      delay = setTimeout(() => {\n        interval = setInterval(() => {\n          handler();\n        }, REPEAT_INTERVAL);\n      }, REPEAT_DELAY);\n    });\n  }\n};\nexport { REPEAT_DELAY, REPEAT_INTERVAL, RepeatClick as default };","map":{"version":3,"mappings":"AAAY,MAACA,eAAe,GAAG;AACnB,MAACC,YAAY,GAAG;AACvB,MAACC,WAAW,GAAG;EAClBC,WAAW,CAACC,EAAE,EAAEC,OAAO,EAAE;IACvB,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAIC,KAAK,GAAG,IAAI;IAChB,MAAMC,OAAO,GAAG,MAAMH,OAAO,CAACI,KAAK,IAAIJ,OAAO,CAACI,KAAK,EAAE;IACtD,MAAMC,KAAK,GAAG,MAAM;MAClB,IAAIH,KAAK,EAAE;QACTI,YAAY,CAACJ,KAAK,CAAC;QACnBA,KAAK,GAAG,IAAI;MACpB;MACM,IAAID,QAAQ,EAAE;QACZM,aAAa,CAACN,QAAQ,CAAC;QACvBA,QAAQ,GAAG,IAAI;MACvB;IACA,CAAK;IACDF,EAAE,CAACS,gBAAgB,CAAC,WAAW,EAAGC,CAAC,IAAK;MACtC,IAAIA,CAAC,CAACC,MAAM,KAAK,CAAC,EAChB;MACFP,OAAO,EAAE;MACTQ,QAAQ,CAACH,gBAAgB,CAAC,SAAS,EAAEH,KAAK,EAAE;QAAEO,IAAI,EAAE;MAAI,CAAE,CAAC;MAC3DP,KAAK,EAAE;MACPH,KAAK,GAAGW,UAAU,CAAC,MAAM;QACvBZ,QAAQ,GAAGa,WAAW,CAAC,MAAM;UAC3BX,OAAO,EAAE;QACnB,CAAS,EAAER,eAAe,CAAC;MAC3B,CAAO,EAAEC,YAAY,CAAC;IACtB,CAAK,CAAC;EACN;AACA","names":["REPEAT_INTERVAL","REPEAT_DELAY","RepeatClick","beforeMount","el","binding","interval","delay","handler","value","clear","clearTimeout","clearInterval","addEventListener","e","button","document","once","setTimeout","setInterval"],"sources":["../../../../../packages/directives/repeat-click/index.ts"],"sourcesContent":["import type { DirectiveBinding, ObjectDirective } from 'vue'\n\nexport const REPEAT_INTERVAL = 100\nexport const REPEAT_DELAY = 600\n\nconst RepeatClick: ObjectDirective = {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    let interval: ReturnType<typeof setInterval> | null = null\n    let delay: ReturnType<typeof setTimeout> | null = null\n\n    const handler = () => binding.value && binding.value()\n\n    const clear = () => {\n      if (delay) {\n        clearTimeout(delay)\n        delay = null\n      }\n      if (interval) {\n        clearInterval(interval)\n        interval = null\n      }\n    }\n\n    el.addEventListener('mousedown', (e: MouseEvent) => {\n      if (e.button !== 0) return\n      handler()\n\n      document.addEventListener('mouseup', clear, { once: true })\n      clear()\n      delay = setTimeout(() => {\n        interval = setInterval(() => {\n          handler()\n        }, REPEAT_INTERVAL)\n      }, REPEAT_DELAY)\n    })\n  },\n}\n\nexport default RepeatClick\n"]},"metadata":{},"sourceType":"module"}