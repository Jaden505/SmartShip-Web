{"ast":null,"code":"import { placements } from '@popperjs/core';\nimport '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nconst POSITIONING_STRATEGIES = [\"fixed\", \"absolute\"];\nconst usePopperCoreConfigProps = buildProps({\n  boundariesPadding: {\n    type: Number,\n    default: 0\n  },\n  fallbackPlacements: {\n    type: definePropType(Array),\n    default: void 0\n  },\n  gpuAcceleration: {\n    type: Boolean,\n    default: true\n  },\n  offset: {\n    type: Number,\n    default: 12\n  },\n  placement: {\n    type: String,\n    values: placements,\n    default: \"bottom\"\n  },\n  popperOptions: {\n    type: definePropType(Object),\n    default: () => ({})\n  },\n  strategy: {\n    type: String,\n    values: POSITIONING_STRATEGIES,\n    default: \"absolute\"\n  }\n});\nconst usePopperContentProps = buildProps({\n  ...usePopperCoreConfigProps,\n  id: String,\n  style: {\n    type: definePropType([String, Array, Object])\n  },\n  className: {\n    type: definePropType([String, Array, Object])\n  },\n  effect: {\n    type: String,\n    default: \"dark\"\n  },\n  visible: Boolean,\n  enterable: {\n    type: Boolean,\n    default: true\n  },\n  pure: Boolean,\n  focusOnShow: {\n    type: Boolean,\n    default: false\n  },\n  trapping: {\n    type: Boolean,\n    default: false\n  },\n  popperClass: {\n    type: definePropType([String, Array, Object])\n  },\n  popperStyle: {\n    type: definePropType([String, Array, Object])\n  },\n  referenceEl: {\n    type: definePropType(Object)\n  },\n  triggerTargetEl: {\n    type: definePropType(Object)\n  },\n  stopPopperMouseEvent: {\n    type: Boolean,\n    default: true\n  },\n  ariaLabel: {\n    type: String,\n    default: void 0\n  },\n  virtualTriggering: Boolean,\n  zIndex: Number\n});\nconst usePopperContentEmits = [\"mouseenter\", \"mouseleave\", \"focus\", \"blur\", \"close\"];\nexport { usePopperContentEmits, usePopperContentProps, usePopperCoreConfigProps };","map":{"version":3,"mappings":";;;AAEA,MAAMA,sBAAsB,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC;AACxC,MAACC,wBAAwB,GAAGC,UAAU,CAAC;EACjDC,iBAAiB,EAAE;IACjBC,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAG;EACDC,kBAAkB,EAAE;IAClBH,IAAI,EAAEI,cAAc,CAACC,KAAK,CAAC;IAC3BH,OAAO,EAAE,KAAK;EAClB,CAAG;EACDI,eAAe,EAAE;IACfN,IAAI,EAAEO,OAAO;IACbL,OAAO,EAAE;EACb,CAAG;EACDM,MAAM,EAAE;IACNR,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAG;EACDO,SAAS,EAAE;IACTT,IAAI,EAAEU,MAAM;IACZC,MAAM,EAAEC,UAAU;IAClBV,OAAO,EAAE;EACb,CAAG;EACDW,aAAa,EAAE;IACbb,IAAI,EAAEI,cAAc,CAACU,MAAM,CAAC;IAC5BZ,OAAO,EAAE,OAAO,EAAE;EACtB,CAAG;EACDa,QAAQ,EAAE;IACRf,IAAI,EAAEU,MAAM;IACZC,MAAM,EAAEf,sBAAsB;IAC9BM,OAAO,EAAE;EACb;AACA,CAAC;AACW,MAACc,qBAAqB,GAAGlB,UAAU,CAAC;EAC9C,GAAGD,wBAAwB;EAC3BoB,EAAE,EAAEP,MAAM;EACVQ,KAAK,EAAE;IAAElB,IAAI,EAAEI,cAAc,CAAC,CAACM,MAAM,EAAEL,KAAK,EAAES,MAAM,CAAC;EAAC,CAAE;EACxDK,SAAS,EAAE;IAAEnB,IAAI,EAAEI,cAAc,CAAC,CAACM,MAAM,EAAEL,KAAK,EAAES,MAAM,CAAC;EAAC,CAAE;EAC5DM,MAAM,EAAE;IACNpB,IAAI,EAAEU,MAAM;IACZR,OAAO,EAAE;EACb,CAAG;EACDmB,OAAO,EAAEd,OAAO;EAChBe,SAAS,EAAE;IACTtB,IAAI,EAAEO,OAAO;IACbL,OAAO,EAAE;EACb,CAAG;EACDqB,IAAI,EAAEhB,OAAO;EACbiB,WAAW,EAAE;IACXxB,IAAI,EAAEO,OAAO;IACbL,OAAO,EAAE;EACb,CAAG;EACDuB,QAAQ,EAAE;IACRzB,IAAI,EAAEO,OAAO;IACbL,OAAO,EAAE;EACb,CAAG;EACDwB,WAAW,EAAE;IACX1B,IAAI,EAAEI,cAAc,CAAC,CAACM,MAAM,EAAEL,KAAK,EAAES,MAAM,CAAC;EAChD,CAAG;EACDa,WAAW,EAAE;IACX3B,IAAI,EAAEI,cAAc,CAAC,CAACM,MAAM,EAAEL,KAAK,EAAES,MAAM,CAAC;EAChD,CAAG;EACDc,WAAW,EAAE;IACX5B,IAAI,EAAEI,cAAc,CAACU,MAAM;EAC/B,CAAG;EACDe,eAAe,EAAE;IACf7B,IAAI,EAAEI,cAAc,CAACU,MAAM;EAC/B,CAAG;EACDgB,oBAAoB,EAAE;IACpB9B,IAAI,EAAEO,OAAO;IACbL,OAAO,EAAE;EACb,CAAG;EACD6B,SAAS,EAAE;IACT/B,IAAI,EAAEU,MAAM;IACZR,OAAO,EAAE,KAAK;EAClB,CAAG;EACD8B,iBAAiB,EAAEzB,OAAO;EAC1B0B,MAAM,EAAEhC;AACV,CAAC;AACW,MAACiC,qBAAqB,GAAG,CACnC,YAAY,EACZ,YAAY,EACZ,OAAO,EACP,MAAM,EACN,OAAO,CACT","names":["POSITIONING_STRATEGIES","usePopperCoreConfigProps","buildProps","boundariesPadding","type","Number","default","fallbackPlacements","definePropType","Array","gpuAcceleration","Boolean","offset","placement","String","values","placements","popperOptions","Object","strategy","usePopperContentProps","id","style","className","effect","visible","enterable","pure","focusOnShow","trapping","popperClass","popperStyle","referenceEl","triggerTargetEl","stopPopperMouseEvent","ariaLabel","virtualTriggering","zIndex","usePopperContentEmits"],"sources":["../../../../../../packages/components/popper/src/content.ts"],"sourcesContent":["import { placements } from '@popperjs/core'\nimport { buildProps, definePropType } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, StyleValue } from 'vue'\nimport type { Options, Placement } from '@popperjs/core'\n\ntype ClassObjectType = Record<string, boolean>\ntype ClassType = string | ClassObjectType | ClassType[]\n\nconst POSITIONING_STRATEGIES = ['fixed', 'absolute'] as const\nexport const usePopperCoreConfigProps = buildProps({\n  boundariesPadding: {\n    type: Number,\n    default: 0,\n  },\n  fallbackPlacements: {\n    type: definePropType<Placement[]>(Array),\n    default: undefined,\n  },\n  gpuAcceleration: {\n    type: Boolean,\n    default: true,\n  },\n  offset: {\n    type: Number,\n    default: 12,\n  },\n  placement: {\n    type: String,\n    values: placements,\n    default: 'bottom',\n  },\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({}),\n  },\n  strategy: {\n    type: String,\n    values: POSITIONING_STRATEGIES,\n    default: 'absolute',\n  },\n} as const)\n\nexport const usePopperContentProps = buildProps({\n  ...usePopperCoreConfigProps,\n  id: String,\n  style: { type: definePropType<StyleValue>([String, Array, Object]) },\n  className: { type: definePropType<ClassType>([String, Array, Object]) },\n  effect: {\n    type: String,\n    default: 'dark',\n  },\n  visible: Boolean,\n  enterable: {\n    type: Boolean,\n    default: true,\n  },\n  pure: Boolean,\n  focusOnShow: {\n    type: Boolean,\n    default: false,\n  },\n  trapping: {\n    type: Boolean,\n    default: false,\n  },\n  popperClass: {\n    type: definePropType<ClassType>([String, Array, Object]),\n  },\n  popperStyle: {\n    type: definePropType<StyleValue>([String, Array, Object]),\n  },\n  referenceEl: {\n    type: definePropType<HTMLElement>(Object),\n  },\n  triggerTargetEl: {\n    type: definePropType<HTMLElement>(Object),\n  },\n  stopPopperMouseEvent: {\n    type: Boolean,\n    default: true,\n  },\n  ariaLabel: {\n    type: String,\n    default: undefined,\n  },\n  virtualTriggering: Boolean,\n  zIndex: Number,\n} as const)\n\nexport const usePopperContentEmits = [\n  'mouseenter',\n  'mouseleave',\n  'focus',\n  'blur',\n  'close',\n]\n\nexport type UsePopperContentProps = ExtractPropTypes<\n  typeof usePopperContentProps\n>\n\nexport type UsePopperCoreConfigProps = ExtractPropTypes<\n  typeof usePopperCoreConfigProps\n>\n"]},"metadata":{},"sourceType":"module"}