{"ast":null,"code":"import '../../../utils/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useDelayedToggleProps } from '../../../hooks/use-delayed-toggle/index.mjs';\nimport { usePopperContentProps } from '../../popper/src/content.mjs';\nimport { POPPER_CONTAINER_SELECTOR } from '../../../hooks/use-popper-container/index.mjs';\nimport { usePopperTriggerProps } from '../../popper/src/trigger.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst triggers = [\"hover\", \"focus\", \"click\", \"contextmenu\"];\nconst ns = useNamespace(\"tooltip\");\nconst useTooltipContentProps = buildProps({\n  ...useDelayedToggleProps,\n  ...usePopperContentProps,\n  appendTo: {\n    type: definePropType([String, Object]),\n    default: POPPER_CONTAINER_SELECTOR\n  },\n  content: {\n    type: String,\n    default: \"\"\n  },\n  rawContent: {\n    type: Boolean,\n    default: false\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  visible: {\n    type: definePropType(Boolean),\n    default: null\n  },\n  transition: {\n    type: String,\n    default: `${ns.namespace.value}-fade-in-linear`\n  },\n  teleported: {\n    type: Boolean,\n    default: true\n  },\n  disabled: {\n    type: Boolean\n  }\n});\nconst useTooltipTriggerProps = buildProps({\n  ...usePopperTriggerProps,\n  disabled: Boolean,\n  trigger: {\n    type: definePropType([String, Array]),\n    default: \"hover\"\n  },\n  triggerKeys: {\n    type: definePropType(Array),\n    default: () => [EVENT_CODE.enter, EVENT_CODE.space]\n  }\n});\nconst useTooltipProps = buildProps({\n  openDelay: {\n    type: Number\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: void 0\n  },\n  hideAfter: {\n    type: Number,\n    default: 200\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  }\n});\nexport { useTooltipContentProps, useTooltipProps, useTooltipTriggerProps };","map":{"version":3,"mappings":";;;;;;;;;;;AAWA,MAAMA,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,CAAC;AAC3D,MAAMC,EAAE,GAAGC,YAAY,CAAC,SAAS,CAAC;AACtB,MAACC,sBAAsB,GAAGC,UAAU,CAAC;EAC/C,GAAGC,qBAAqB;EACxB,GAAGC,qBAAqB;EACxBC,QAAQ,EAAE;IACRC,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAM,EAAEC,MAAM,CAAC,CAAC;IACtCC,OAAO,EAAEC;EACb,CAAG;EACDC,OAAO,EAAE;IACPN,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDG,UAAU,EAAE;IACVP,IAAI,EAAEQ,OAAO;IACbJ,OAAO,EAAE;EACb,CAAG;EACDK,UAAU,EAAED,OAAO;EACnBE,SAAS,EAAER,MAAM;EACjBS,OAAO,EAAE;IACPX,IAAI,EAAEC,cAAc,CAACO,OAAO,CAAC;IAC7BJ,OAAO,EAAE;EACb,CAAG;EACDQ,UAAU,EAAE;IACVZ,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAG,GAAEX,EAAE,CAACoB,SAAS,CAACC,KAAM;EACnC,CAAG;EACDC,UAAU,EAAE;IACVf,IAAI,EAAEQ,OAAO;IACbJ,OAAO,EAAE;EACb,CAAG;EACDY,QAAQ,EAAE;IACRhB,IAAI,EAAEQ;EACV;AACA,CAAC;AACW,MAACS,sBAAsB,GAAGrB,UAAU,CAAC;EAC/C,GAAGsB,qBAAqB;EACxBF,QAAQ,EAAER,OAAO;EACjBW,OAAO,EAAE;IACPnB,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAM,EAAEkB,KAAK,CAAC,CAAC;IACrChB,OAAO,EAAE;EACb,CAAG;EACDiB,WAAW,EAAE;IACXrB,IAAI,EAAEC,cAAc,CAACmB,KAAK,CAAC;IAC3BhB,OAAO,EAAE,MAAM,CAACkB,UAAU,CAACC,KAAK,EAAED,UAAU,CAACE,KAAK;EACtD;AACA,CAAC;AACW,MAACC,eAAe,GAAG7B,UAAU,CAAC;EACxC8B,SAAS,EAAE;IACT1B,IAAI,EAAE2B;EACV,CAAG;EACDC,YAAY,EAAE;IACZ5B,IAAI,EAAEQ,OAAO;IACbJ,OAAO,EAAE,KAAK;EAClB,CAAG;EACDyB,SAAS,EAAE;IACT7B,IAAI,EAAE2B,MAAM;IACZvB,OAAO,EAAE;EACb,CAAG;EACD0B,SAAS,EAAE;IACT9B,IAAI,EAAEQ,OAAO;IACbJ,OAAO,EAAE;EACb;AACA,CAAC","names":["triggers","ns","useNamespace","useTooltipContentProps","buildProps","useDelayedToggleProps","usePopperContentProps","appendTo","type","definePropType","String","Object","default","POPPER_CONTAINER_SELECTOR","content","rawContent","Boolean","persistent","ariaLabel","visible","transition","namespace","value","teleported","disabled","useTooltipTriggerProps","usePopperTriggerProps","trigger","Array","triggerKeys","EVENT_CODE","enter","space","useTooltipProps","openDelay","Number","visibleArrow","hideAfter","showArrow"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["// @ts-nocheck\nimport { buildProps, definePropType } from '@element-plus/utils'\nimport {\n  usePopperContentProps,\n  usePopperTriggerProps,\n} from '@element-plus/components/popper'\nimport {\n  POPPER_CONTAINER_SELECTOR,\n  useDelayedToggleProps,\n  useNamespace,\n} from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport type Tooltip from '../tooltip.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nconst triggers = ['hover', 'focus', 'click', 'contextmenu'] as const\nconst ns = useNamespace('tooltip')\n\nexport type Trigger = typeof triggers[number]\n\nexport const useTooltipContentProps = buildProps({\n  ...useDelayedToggleProps,\n  ...usePopperContentProps,\n  appendTo: {\n    type: definePropType<string | HTMLElement>([String, Object]),\n    default: POPPER_CONTAINER_SELECTOR,\n  },\n  content: {\n    type: String,\n    default: '',\n  },\n  rawContent: {\n    type: Boolean,\n    default: false,\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  // because model toggle prop is generated dynamically\n  // so the typing cannot be evaluated by typescript as type:\n  // [name]: { type: Boolean, default: null }\n  // so we need to declare that again for type checking.\n  visible: {\n    type: definePropType<boolean | null>(Boolean),\n    default: null,\n  },\n  transition: {\n    type: String,\n    default: `${ns.namespace.value}-fade-in-linear`,\n  },\n  teleported: {\n    type: Boolean,\n    default: true,\n  },\n  disabled: {\n    type: Boolean,\n  },\n} as const)\n\nexport const useTooltipTriggerProps = buildProps({\n  ...usePopperTriggerProps,\n  disabled: Boolean,\n  trigger: {\n    type: definePropType<Trigger | Trigger[]>([String, Array]),\n    default: 'hover',\n  },\n  triggerKeys: {\n    type: definePropType<string[]>(Array),\n    default: () => [EVENT_CODE.enter, EVENT_CODE.space],\n  },\n} as const)\n\nexport const useTooltipProps = buildProps({\n  openDelay: {\n    type: Number,\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: undefined,\n  },\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport type ElTooltipContentProps = ExtractPropTypes<\n  typeof useTooltipContentProps\n>\n\nexport type ElTooltipTriggerProps = ExtractPropTypes<\n  typeof useTooltipTriggerProps\n>\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps> &\n  ElTooltipContentProps &\n  ElTooltipTriggerProps\n\nexport type TooltipInstance = InstanceType<typeof Tooltip>\n"]},"metadata":{},"sourceType":"module"}